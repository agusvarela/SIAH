@model SIAH.Models.Pedidos.Pedido


@{
    ViewBag.Title = "Generar Pedido";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    var detallesPedido = Model.detallesPedido;
    var hid = Int32.Parse(Session["hospitalId"].ToString());
    var hosp = Session["hospital"].ToString();
}

@using (Html.BeginForm("Create", "Pedidos", FormMethod.Post, new { id = "pedidoForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="banner-catalog">
        <div class="container">
            <div class="col-lg-12">
                <h1>Generar Pedido de insumos</h1>
                <div class="banner-catalog__content">  En este formulario puede generar su Pedido de Insumos, que luego sera revisado por la Oficina de Autorizaciones Hospitalarias.</div>
            </div>
        </div>
    </div>
    <br />

    <div class="container" style=" padding-bottom: 30px;">

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-12">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn">
                        <div class="form-card__title info-header">
                            <div class="alert-icon">
                                <i class="material-icons">info_outline</i>
                                <strong>Información general del pedido</strong>
                            </div>
                        </div>
                        <div class="form-card__content group">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.periodo, "Período", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div class="col-md-12">
                                        @Html.TextBox("periodo", DateTime.Today.ToString("MMMM - yyyy"), htmlAttributes: new { @class = "form-control", @readonly = "readonly", @value = DateTime.Today, @type = "hidden" })
                                        @{
                                            string period = DateTime.Today.ToString("MMMM - yyyy");
                                            period = char.ToUpper(period[0]).ToString() + period.Substring(1);
                                        }
                                        <text class="form-control">@period</text>
                                        @Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.fechaGeneracion, "Fecha Generación", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div class="col-md-12">
                                        @Html.TextBox("fechaGeneracion", DateTime.Today.ToShortDateString(), htmlAttributes: new { @class = "form-control", @readonly = "readonly", @value = DateTime.Today, @type = "hidden" })
                                        <text class="form-control">@DateTime.Today.ToShortDateString()</text>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.hospitalId, "Hospital", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div class="col-md-12">
                                        @Html.TextBox("hospitalId", hid, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @type = "hidden" })
                                        <text class="form-control">@hosp</text>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.hospital.presupuesto, "Presupuesto", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div id="container" class="col-md-12">
                                        <text id="presupuesto" class="form-control"></text>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <hr />

            <div class="row">
                <div class="col-md-8" id="det">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn">

                        <div class="form-card__title purple-header">
                            <div class="alert-icon">
                                <i class="material-icons">add</i>
                                <strong>Agregue Insumos</strong>
                            </div>
                        </div>

                        <div class="form-card__content group">
                            <div class="col-sm-12">
                                <div class="col-sm-6" style="padding-left: 0px;">
                                    <div class="form-group">
                                        <select class="form-control" id="tipo">
                                            <option value="">Seleccione un tipo de Insumo</option>
                                            @{ var tipoInsumo = ViewBag.tipoInsumo;}
                                            @foreach (var item in tipoInsumo)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div id="insu" class="form-group label-floating">
                                    @Html.LabelFor(model => model.detallesPedido, " Insumo", htmlAttributes: new { @class = "control-label " })
                                    <input id="q" class="form-control style='background-color: white' buscador ui-autocomplete-input" type="text" value="" autocomplete="on" onkeypress="return event.charCode != 13">
                                </div>
                            </div>

                            <div class="col-sm-4 col-md-offset-1">
                                <div id="canti" class="form-group label-floating">
                                    @Html.Label("Cantidad", null, htmlAttributes: new { @class = "control-label" })
                                    <input type="number" maxlength="7" id="cantidad" class="form-control" min="1" max="999999" required onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
                                    <span class="help-block" data-valmsg-for="cantidad">Entre 1 y 999999</span>
                                </div>
                            </div>

                            <div class="col-xs-12">
                                <br />
                                <input id="btn_addInsumo" type="submit" value="Agregar Insumo" class="btn btn-round btn-success pull-right btn_addInsumo" />
                            </div>
                            <br>
                        </div>

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn">

                        <div class="form-card__title alert-header">
                            <div class="alert-icon">
                                <i class="material-icons">warning</i>
                                <strong>Pedido Urgente!</strong>
                            </div>
                        </div>

                        <div class="form-card__content group">
                            <div class="form-group">
                                @Html.LabelFor(model => model.esUrgente, "Seleccione esta casilla si su pedido es urgente:", htmlAttributes: new { @class = "control-label col-md-12 tota text-center", @data_toggle = "tooltip", @data_placement = "top", @data_original_title = "Seleccione esta casilla si su pedido es Urgente" })
                                <div class="col-sm-12 text-center">
                                    <div class="checkbox" style="padding-bottom: 9px; padding-top: 10px;">
                                        <label>
                                            @Html.CheckBoxFor(model => model.esUrgente, htmlAttributes: new { @type = "checkbox", @name = "optionsCheckboxes", @data_toggle = "tooltip", @data_placement = "right", @data_original_title = "Seleccione esta casilla si su pedido es Urgente" })
                                            @Html.ValidationMessageFor(model => model.esUrgente, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                </div>

                                <div class="col-sm-12 text-center">
                                    <br />
                                    <input type="button" value="Mas info" class="btn btn-round btn-primary pull-center" id="masInfo" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <br />
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn ">
                        <div class="form-card__title  violet-header">
                            <div class="alert-icon">
                                <i class="material-icons">storage</i>
                                <strong>Listado de Insumos</strong>
                            </div>
                        </div>
                        <div class="form-card__content group">
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-12">
                                        <table id="insumos" class=" table table-hover table-condensed">
                                            <thead>
                                                <tr class="text-center list-group-item-info">
                                                    <th class="text-center">Nombre</th>
                                                    <th class="text-center">Tipo </th>
                                                    <th class="text-center">Cantidad</th>
                                                    <th class="text-center">Precio Unitario</th>
                                                    <th class="text-center">Sub Total</th>
                                                    <th class="text-center">Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody name="detallesPedido" id="detallesPedido"></tbody>
                                        </table>
                                    </div>
                                </div>

                                <div class="col-sm-12">
                                    <div class="pull-rigth col-sm-3" id="cuadritos1" style="padding-right:10px">
                                        <div class="card" style="box-shadow: 1px 1px 9px black; display:flex">
                                            <div class="col-sm-5 text-center text-" style="display: flex; align-items: center;">
                                                @Html.Label("Total:", null, htmlAttributes: new { @class = "control-label", @style = "size: 18px; padding-bottom: 10px;" })
                                            </div>
                                            <div class="col-sm-6">
                                                <strong>
                                                    @Html.TextBox("total", 0, htmlAttributes: new { @readonly = "readonly", @class = "form-control text-center tot", @type = "hidden" })
                                                    <text class="form-control text-center tot" id="totalAMostrar">$0</text>
                                                </strong>
                                            </div>
                                            <div>
                                                <span id="totalSpan" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                                <div class="col-xs-12">
                                    <br />
                                    <input type="button" id="enviar" value="Enviar Pedido" class="btn pull-right btn-success" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div>
            <input type="button" id="volver" value="Volver al listado de pedidos" class="btn pull-left btn-primary" onclick="location.href = '/Pedidos/RespFarmacia'" />
            @{
                if (ViewBag.hasLastPedido)
                {
                    <input type="button" id="lastpedido" value="Cargar Ultimo Pedido" class="btn pull-left btn-facebook" />
                }
                else
                {
                    <a id="lastpedido" value="Cargar Ultimo Pedido" class="btn pull-left btn-warning disabled" data-toggle="tooltip" title="No posee ningún pedido anterior para cargar">Pre-cargar ultimo pedido</a>
                }
            }
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        var indice;
        var table;
        var nombreInsumoBtnAdd;
        var submitted = false;

        $(document).on('click', '#enviar', function (event) {
            event.preventDefault();
            document.getElementById("q").removeAttribute('required');
            document.getElementById("cantidad").removeAttribute('required');

            Swal.fire({
                title: 'Se enviará su pedido',
                text: "¿Está seguro que desea continuar?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                confirmButtonText: 'Aceptar',
                cancelButtonColor: "#dc3545",
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    $('#pedidoForm').submit();
                }
            })
        });

        $(document).ready(function () {
            //Para cargar la cantidad de presupuesto que tiene el hospital para realizar los pedidos
            var idHospital = $('#hospitalId').val();
            $.ajax({
                url: '@Url.Action("getPresupuesto", "Hospitales")',
                type: 'GET',
                data: { idHospital: idHospital },
                cache: false,
                success: function (result) {
                    var presupuesto = parseFloat(result);
                    var $presupuestoAMostrar = new Intl.NumberFormat('de-DE').format(presupuesto);
                    $('#presupuesto').html("$" + $presupuestoAMostrar);
                }
            });

            //Deshabilita el boton add insumo al cargar la página
            $('#btn_addInsumo').attr('disabled', true);

            //begin hack: Show confirm dialog when refreshing page
            $(window).on('beforeunload', function (e) {

                if (!submitted) {
                    var message = "¿Está seguro que desea abandonar el sitio?", e = e || window.event;
                    if (e) {
                        e.returnValue = message;
                    }
                    return message;
                }
            });
            $('#pedidoForm').submit(function (event) {
                console.log("pedidoForm");
                submitted = true;
            });

            //Desplegar cartel de más info cuando se toca el boton de mas info de peddo urgente
            $('#masInfo').on('click', function () {
                Swal.fire({
                    title: '<strong>Pedido Urgente!</strong>',
                    icon: 'info',
                    html:
                        '<p align="left"> Si usted marca este pedido como <strong>"Urgente"</strong> , tendrá una prioridad mayor que los pedidos comunes. </p>' +
                        '<p align="left">Por favor comúniquese con el Responsable de Autorización de su hospital para obtener más información sobre pedidos Urgentes. </p>',
                    showCloseButton: true,
                    confirmButtonText:'OK',
                })
            });

            //Borra nombre insumo si se quiere borrar y deshabilita el boton add insumo
            $('#q').on('keyup', function (event) {
                if ($('#q').val() != nombreInsumoBtnAdd) {
                    $('#btn_addInsumo').attr('disabled', true);
                    if (event.keyCode == 8) {
                        $('#q').val('');
                    }
                } else if ($('#cantidad').val() != '') {
                    $('#btn_addInsumo').attr('disabled', false);
                }
            });
            //No deja ingresar cantidad cero y si deja cantidad vacia el boton add insum se deshabilita
            $('#cantidad').on('keyup mouseup', function (event) {

                if ($('#cantidad').val() < 1 || event.keyCode == 8) {
                    $('#cantidad').val('');
                    $('#btn_addInsumo').attr('disabled', true);
                } else if ($('#cantidad').val() > 999999) {
                    $('#btn_addInsumo').attr('disabled', true);
                } else if ($('#cantidad').val() > 0 && $('#q').val() == nombreInsumoBtnAdd && $('#q').val() != '') {
                    $('#btn_addInsumo').attr('disabled', false);
                }
            });

            $('#lastpedido').on('click', function () {
                Swal.fire({
                    title: 'Cargar ultimo pedido',
                    text: "¿Está seguro que desea continuar?. Cualquier cambio realizado se perderá.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: "#28a745",
                    confirmButtonText: 'Aceptar',
                    cancelButtonColor: "#dc3545",
                    cancelButtonText: 'Cancelar',
                    reverseButtons: true
                }).then((result) => {
                    if (result.value) {

                        total = 0;

                        let detallesLastPedido;
                        $.ajax({
                            url: '@Url.Action("LastPedido", "Pedidos")',
                            type: 'GET',
                            data: { idHospital: idHospital },
                            cache: false,
                            success: function (result) {
                                detallesLastPedido = result;
                                table
                                    .clear()
                                    .draw();
                                result.forEach(function (data) {
                                    var $insumo_id = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][id]').attr('id', 'detallesPedido[' + indice + '][insumo][id]').val(data.insumoId);
                                    var $insumoId = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumoId]').attr('id', 'detallesPedido[' + indice + '][insumoId]').val(data.insumoId);
                                    var $nombre = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][nombre]').attr('id', 'detallesPedido[' + indice + '][insumo][nombre]').val(data.nombre);
                                    var $tdInsumo = $('<td>').html(data.nombre).append($insumoId, $insumo_id, $nombre).addClass('text-center');

                                    var $tipo = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][tiposInsumo][nombre]').attr('id', 'detallesPedido[' + indice + '][insumo][tiposInsumo][nombre]').val(data.tipo);
                                    var $tdTipo = $('<td>').html(data.tipo).append($tipo).addClass('text-center');

                                    var $precioAMostrar = new Intl.NumberFormat('de-DE').format(data.precioUnitario);

                                    var $precioUnitario = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][precioUnitario]').attr('id', 'detallesPedido[' + indice + '][insumo][precioUnitario]').val($precioAMostrar);
                                    var $tdPrecioUnitario = $('<td>').addClass('text-center').html("$" + $precioAMostrar).append($precioUnitario);

                                    var cantidadNumerica = parseInt(data.cantidad);
                                    var $cantidad = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][cantidad]').attr('id', 'detallesPedido[' + indice + '][cantidad]').val(cantidadNumerica);
                                    var $tdCantidad = $('<td>').addClass('text-center').attr('id', '[' + indice + ']cantidadVisible').html(cantidadNumerica).append($cantidad);

                                    var $subtotalCalculado = data.precioUnitario * data.cantidad;
                                    var $subtotalAMostrar = new Intl.NumberFormat('de-DE').format($subtotalCalculado);

                                    var $subtotal = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][subtotal]').attr('id', 'detallesPedido[' + indice + '][subtotal]').val($subtotalAMostrar);
                                    var $tdSubtotal = $('<td>').addClass('text-center').attr('id', '[' + indice + ']subTotalVisible').html('$' + $subtotalAMostrar).append($subtotal);

                                    var $boton = $('<button>').attr('type', 'button').attr('id', 'btn-eliminar-detallesPedido').attr('rel', 'tooltip').attr('title', 'Eliminar Insumo').addClass('btn btn-danger btn-simple btn-xs ').append($('<i>').addClass('fa fa-times'));
                                    var $tdAccion = $('<td>').addClass('td-actions').append($boton).addClass('text-center');

                                    var $tr = $('<tr>').append($tdInsumo, $tdTipo, $tdCantidad, $tdPrecioUnitario, $tdSubtotal, $tdAccion);

                                    indice++;
                                    total += $subtotalCalculado;
                                    table.row.add($tr);
                                    table.draw();
                                    data = '';
                                    //El total se llenaba de decimales asi que hice esto para redondearlo a dos decimales nomas
                                    var $totalAMostrar = new Intl.NumberFormat('de-DE').format(parseFloat(total).toFixed(2));
                                    $('#total').val("$" + $totalAMostrar);
                                    $('#totalAMostrar').html("$" + $totalAMostrar);

                                    //Verificacion del costo del pedido respecto al presupuesto
                                    if (parseFloat($('#presupuesto').text().replace("$", "").replace(".", "")) < total) {
                                        $('#totalSpan').text("El costo del pedido supera el presupuesto")
                                    }

                                    $('#enviar').show();

                                    vaciarTextBox();
                                    reiniciarInputs();
                                });
                            }
                        });
                    }
                });
            });

        //end hack
        //Este método borra los campos requeridos de insumo y cantidad para
        //que se pueda submitear el form sin que los pida, ya que no son necesarios.

        //Este metodo Habilita el boton si insumo esta vacio para que pueda hacer las validaciones(Facu)
        table = $("#insumos").DataTable({ "oLanguage": { "sEmptyTable": "No hay insumos cargados para este pedido" } });

        var total = 0;
        indice = table.length;
        $('#enviar').hide();
        var data = '';

        $("#q").autocomplete({
        minLength: 0,
        source: function (request, response) {

            $.ajax({
                url: '@Url.Action("../Insumos/BuscarInsumos")',
                dataType: "json",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {
                    term: request.term,
                    id: $('#tipo').val()
                },
                success: function (data) {
                    response(data);
                }
            });
        },
        select: function (event, p) {
            data = p.item;
            $('#q').val(p.item.nombre);
            $('#idInsumo').val(p.item.id);
            nombreInsumoBtnAdd = p.item.nombre;

            if ($('#cantidad').val() != '') {
                $('#btn_addInsumo').attr('disabled', false);
            }
            return false;
        }
    }).autocomplete("instance")._renderItem = function (ul, item) {
        return $("<li>")
            .append("<div><strong>" + item.nombre + "<\/strong><br><em>" + item.tipo + "<\/em><\/div>")
            .appendTo(ul);
            }

    $(document).on('click', '#btn-eliminar-detallesPedido', function () {
        //Funcion que resta el subtotal de la fila a eliminar del total
        //Luego elimina la fila entera del detalle y verifica si la lista esta vacia para ocultar el boton
        var $aRestar = parseFloat($(this).parents('tr').get(0).children.item(4).innerText.split(".").join("").replace(",", ".").replace("$", ""));
        total -= $aRestar;
        $aRestar = 0;

        indice--;
        var $totalAMostrar = new Intl.NumberFormat('de-DE').format(total);
        if ($totalAMostrar == -0) {
            $totalAMostrar = 0;
        }
        $('#total').val("$" + $totalAMostrar);
        $('#totalAMostrar').html("$" + $totalAMostrar);

        var idActual = parseInt($(this).closest("tr").remove().children().get(2).id.substring(1, 2));
        table.row($(this).parents()).remove().draw();

        if ($('#detallesPedido > tr').length == 1 && $('#detallesPedido > tr').get(0).cells.length == 1) {
            $('#enviar').hide();
            $('#detallesPedido .empty').show();
        } else {
            actualizarIndicesTabla(idActual);
        }

        if (parseFloat($('#presupuesto').text().replace("$", "").replace(".", "")) > total) {
            $('#totalSpan').text("")
        }
    });

    //Boton para agregar insumo a la lista
            $(document).on('click', '#btn_addInsumo', function (event) {
                nombreInsumoBtnAdd = '';
                //Previene que se submitee el Form con este botón. Solo valide los campos vacios.
                event.preventDefault();
                var cantidad = $('#cantidad').val();

                if (data != '' && cantidad != "") {
                    $('#enviar').show();
                    if ($('#detallesPedido .empty').is(':visible')) {
                        $('#detallesPedido .empty').hide();
                    }

                    //Evaluar si el insumo ya fue ingresado
                    var elementoInsumoId;
                    var insumoId;
                    var idFila = 0;
                    var flag = true;
                    for (var i = 0; i < $('#detallesPedido > tr').length; i++) {
                        elementoInsumoId = document.getElementById('detallesPedido[' + i + '][insumoId]');
                        if (elementoInsumoId != null) {
                            insumoId = elementoInsumoId.getAttribute("value");
                            if (data.id == insumoId) {
                                flag = false;
                                idFila = i;

                                Swal.fire({
                                    title: 'El insumo ya se encuentra agregado',
                                    text: "¿Desea sumar la cantidad ingresada?",
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: "#28a745",
                                    confirmButtonText: 'Actualizar',
                                    cancelButtonColor: "#dc3545",
                                    cancelButtonText: 'Cancelar',
                                    reverseButtons: true
                                }).then((result) => {
                                    addInsumoDialog(result, idFila);
                                })
                            }
                        }
                    }

                    //En el caso que nunca fue ingresado se procede al agregado en la lista, caso contrario no se agrega
                    if (flag == true) {
                        var $insumo_id = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][id]').attr('id', 'detallesPedido[' + indice + '][insumo][id]').val(data.id);
                        var $insumoId = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumoId]').attr('id', 'detallesPedido[' + indice + '][insumoId]').val(data.id);
                        var $nombre = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][nombre]').attr('id', 'detallesPedido[' + indice + '][insumo][nombre]').val(data.nombre);
                        var $tdInsumo = $('<td>').html(data.nombre).append($insumoId, $insumo_id, $nombre).addClass('text-center');

                        var $tipo = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][tiposInsumo][nombre]').attr('id', 'detallesPedido[' + indice + '][insumo][tiposInsumo][nombre]').val(data.tipo);
                        var $tdTipo = $('<td>').html(data.tipo).append($tipo).addClass('text-center');

                        var $precioAMostrar = new Intl.NumberFormat('de-DE').format(data.precioUnitario);

                        var $precioUnitario = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][precioUnitario]').attr('id', 'detallesPedido[' + indice + '][insumo][precioUnitario]').val($precioAMostrar);
                        var $tdPrecioUnitario = $('<td>').addClass('text-center').html("$" + $precioAMostrar).append($precioUnitario);

                        var cantidadNumerica = parseInt($('#cantidad').val());
                        var $cantidad = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][cantidad]').attr('id', 'detallesPedido[' + indice + '][cantidad]').val(cantidadNumerica);
                        var $tdCantidad = $('<td>').addClass('text-center').attr('id', '[' + indice + ']cantidadVisible').html(cantidadNumerica).append($cantidad);

                        var $subtotalCalculado = data.precioUnitario * $('#cantidad').val();
                        var $subtotalAMostrar = new Intl.NumberFormat('de-DE').format($subtotalCalculado);

                        var $subtotal = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][subtotal]').attr('id', 'detallesPedido[' + indice + '][subtotal]').val($subtotalAMostrar);
                        var $tdSubtotal = $('<td>').addClass('text-center').attr('id', '[' + indice + ']subTotalVisible').html('$' + $subtotalAMostrar).append($subtotal);

                        var $boton = $('<button>').attr('type', 'button').attr('id', 'btn-eliminar-detallesPedido').attr('rel', 'tooltip').attr('title', 'Eliminar Insumo').addClass('btn btn-danger btn-simple btn-xs ').append($('<i>').addClass('fa fa-times'));
                        var $tdAccion = $('<td>').addClass('td-actions').append($boton).addClass('text-center');

                        var $tr = $('<tr>').append($tdInsumo, $tdTipo, $tdCantidad, $tdPrecioUnitario, $tdSubtotal, $tdAccion);

                        indice++;
                        total += $subtotalCalculado;
                        table.row.add($tr);
                        table.draw();
                        data = '';
                        //El total se llenaba de decimales asi que hice esto para redondearlo a dos decimales nomas
                        var $totalAMostrar = new Intl.NumberFormat('de-DE').format(parseFloat(total).toFixed(2));
                        $('#total').val("$" + $totalAMostrar);
                        $('#totalAMostrar').html("$" + $totalAMostrar);

                //Verificacion del costo del pedido respecto al presupuesto
                if (parseFloat($('#presupuesto').text().replace("$", "").replace(".", "")) < total) {
                    $('#totalSpan').text("El costo del pedido supera el presupuesto")
                }

                vaciarTextBox();
                reiniciarInputs();

                //Enfocar el campo de texto insumo para que siga agregando
                $('#q').focus();
            }
        }
            });


            function addInsumoDialog(result, i) {
                if (result.value) {

                    //Se obtienen los elementos HTML de cantidad para modificar en la tabla
                    var elementoCantidad = document.getElementById('detallesPedido[' + i + '][cantidad]');
                    //Se obtienen las respectivas cantidades a modificar
                    var cantidadAnterior = parseInt(elementoCantidad.getAttribute("value"));
                    var cantidadIngresada = parseInt($('#cantidad').val());
                    var cantidadNueva = (cantidadAnterior + cantidadIngresada).toString();
                    //Se modifica la cantidad en la fila de la tabla correspondiente
                    elementoCantidad.setAttribute("value", cantidadNueva);

                    var elementoCantidadVisible = document.getElementById('[' + i + ']cantidadVisible');
                    elementoCantidadVisible.innerHTML = elementoCantidadVisible.innerHTML.replace(cantidadAnterior.toString(), cantidadNueva);

                    //Se obtiene los elementos HTML de subtotal
                    var elementoSubTotal = document.getElementById('detallesPedido[' + i + '][subtotal]');
                    //Se obtienen los subtotales a modificar
                    var precioUnitario = parseFloat(document.getElementById('detallesPedido[' + i + '][insumo][precioUnitario]').getAttribute("value").replace(",", "."));
                    var subTotalAnterior = parseFloat(elementoSubTotal.getAttribute("value").replace(",", "."));
                    var subTotalASumar = precioUnitario * cantidadIngresada;
                    var nuevoSubTotal = new Intl.NumberFormat('de-DE').format(parseFloat(subTotalASumar + subTotalAnterior).toFixed(2));
                    //Se actualiza los valores de subtotal en la respectiva fila
                    elementoSubTotal.setAttribute("value", nuevoSubTotal.toString().replace(".", ","));

                    var elementoSubTotalVisible = document.getElementById('[' + i + ']subTotalVisible');
                    elementoSubTotalVisible.innerHTML = elementoSubTotalVisible.innerHTML.replace(subTotalAnterior.toString().replace(".", ","), nuevoSubTotal.toString().replace(".", ","));

                    //Se actualiza el total del pedido
                    total += subTotalASumar;
                    var $totalAMostrar = new Intl.NumberFormat('de-DE').format(parseFloat(total).toFixed(2));
                    $('#total').val("$" + $totalAMostrar);
                    $('#totalAMostrar').html("$" + $totalAMostrar);

                    Swal.fire(
                        'Actualizacion realizada!',
                        'La cantidad se agregó correctamente.',
                        'success'
                    )

                    vaciarTextBox();
                    reiniciarInputs();

                } else {
                    vaciarTextBox();
                    reiniciarInputs();

                    Swal.fire(
                        'Cancelado!',
                        'El insumo no fue actualizado.',
                        'error'
                    )
                }
            }

            function vaciarTextBox() {
                //Vacia los text box
                $('#q').val("");
                $('#cantidad').val("");
                $('#tipo').val("");
                $('#btn_addInsumo').attr('disabled', true);
            }

            function reiniciarInputs() {
                //Agrega un atributo a la clase, para que se reinicien los inputs
                $('#insu').attr('class', 'form-group label-floating is-empty');
                $('#canti').attr('class', 'form-group label-floating is-empty');
            }

            function actualizarIndicesTabla(idActual) {
                if (idActual >= $('#detallesPedido > tr').length) { return; }

                for (idActual; idActual < $('#detallesPedido > tr').length; idActual++) {
                    idADesplazar = idActual + 1;

                    actualizarCelda('[insumo][id]', idActual, idADesplazar, false);
                    actualizarCelda('[insumoId]', idActual, idADesplazar, false);
                    actualizarCelda('[insumo][nombre]', idActual, idADesplazar, false);
                    actualizarCelda('[insumo][tiposInsumo][nombre]', idActual, idADesplazar, false);
                    actualizarCelda('[insumo][precioUnitario]', idActual, idADesplazar, false);
                    actualizarCelda('[cantidad]', idActual, idADesplazar, false);
                    actualizarCelda('cantidadVisible', idActual, idADesplazar, true);
                    actualizarCelda('[subtotal]', idActual, idADesplazar, false);
                    actualizarCelda('subTotalVisible', idActual, idADesplazar, true);
                }
            }

            function actualizarCelda(celda, idActual, idADesplazar, esEspecial) {
                var especial = 'detallesPedido';
                var idActualString = '[' + idActual + ']';
                var idADesplazarString = '[' + idADesplazar + ']';

                if (esEspecial) {
                    especial = '';
                    var element = document.getElementById(especial + idADesplazarString + celda);
                    element.id = element.id.replace(idADesplazarString, idActualString);
                    return;
                } else {
                    var element = document.getElementById(especial + idADesplazarString + celda);
                    element.name = element.name.replace(idADesplazarString, idActualString);
                    element.id = element.id.replace(idADesplazarString, idActualString);
                }
            }

        });
    </script>
}
