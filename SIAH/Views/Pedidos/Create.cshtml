@model SIAH.Models.Pedidos.Pedido


@{
    ViewBag.Title = "Generar Pedido";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    var detallesPedido = Model.detallesPedido;
}

@using (Html.BeginForm(new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="banner-catalog">
        <div class="container">
            <div class="col-lg-12">
                <h1>Generar Pedido de insumos</h1>
                <div class="banner-catalog__content"> Aqui puede generar su pedido de insumos para su hospital, que luego sera revisado por la Oficina de Autorizaciones Hospitalarias</div>
            </div>
        </div>
    </div>
    <br />

    <div class="container" style=" padding-bottom: 30px;">

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-12">
                    <div class="form-card form-card--purple form-card--tight">
                        <div class="form-card__title info-header">
                            <div class="alert-icon">
                                <i class="material-icons">info_outline</i>
                                <strong>Información general del pedido</strong>
                            </div>
                        </div>
                        <div class="form-card__content group">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.periodo, "Período:", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div class="col-md-12">
                                        @Html.TextBox("periodo", DateTime.Today.ToString("MMMM - yyyy"), htmlAttributes: new { @class = "form-control", @readonly = "readonly", @value = DateTime.Today })
                                        @Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.fechaGeneracion, "Fecha Generación:", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div class="col-md-12">
                                        @Html.TextBox("fechaGeneracion", DateTime.Today.ToShortDateString(), htmlAttributes: new { @class = "form-control", @readonly = "readonly", @value = DateTime.Today })
                                        @Html.ValidationMessageFor(model => model.fechaGeneracion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.hospitalId, "Hospital:", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div class="col-md-12">
                                        @Html.DropDownList("hospitalId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.hospitalId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.hospital.presupuesto, "Presupuesto:", htmlAttributes: new { @class = "control-label col-md-12 tota" })
                                    <div id="container" class="col-md-12">
                                        @*@Html.Action("getPresupuesto", "HospitalController", new { idHospital = 0 })*@
                                        <text id="presupuesto" class="form-control"></text>
                                        @*@Html.TextBox("presupuesto",null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @id = "presupuesto" })*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <hr />


            <div class="row">
                <div class="col-md-8" id="det">
                    <div class="form-card form-card--purple form-card--tight ">
                        <div class="form-card__title purple-header">
                            <div class="alert-icon">
                                <i class="material-icons">add</i>
                                <strong>Agregue Insumos</strong>
                            </div>
                        </div>
                        <div class="form-card__content group">
                            @*<div class="panel-heading">INSUMOS</div>*@
                            
                                <div class="col-sm-8">
                                    <div class="form-group">
                                        @*<label class="control-label col-md-3">Seleccione un tipo</label>*@
                                        
                                            <select class="form-control" id="tipo">
                                                <option value="">Seleccione un tipo de Insumo</option>
                                                @{ var tipoInsumo = ViewBag.tipoInsumo;}
                                                @foreach (var item in tipoInsumo)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </select>
                                        
                                        @*<div class="col-md-7">
                    @Html.Label("Campo opcional", null, htmlAttributes: new { })
                </div>*@
                                    </div>
                                </div>
                        
                           
                                <div class="col-sm-10">
                                    <div id="insu" class="form-group label-floating">
                                        @Html.LabelFor(model => model.detallesPedido, " Insumo", htmlAttributes: new { @class = "control-label " })


                                        <input id="q" class="form-control style='background-color: white' buscador ui-autocomplete-input" type="text" value="" autocomplete="on" required>

                                    </div>

                                </div>

                                <div class="col-sm-2">
                                    <div id="canti" class="form-group label-floating">
                                        @Html.Label(" Cantidad", null, htmlAttributes: new { @class = "control-label" })

                                        @*@Html.TextBox("Cantidad", null, htmlAttributes: new { @class = "form-control", @id = "cantidad", @type = "number", @valueDefault = 0, @valueMin = 0 })*@
                                        <input type="number" maxlength="7" id="cantidad" class="form-control" min="1" max="999999" required onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
                                        @*<span class="help-block"
                    data-valmsg-for="cantidad">La cantidad ingresada debe ser mayor a 0 y menor a 999999.</span>*@
                                    </div>
                                </div>
                           
                                <div class="col-xs-12">
                                    <br />
                                    <input id="btn_addInsumo" type="submit" value="Agregar Insumo" class="btn btn-round btn-success pull-right btn_addInsumo" />
                                </div>
                                <br>
                            </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-card form-card--purple form-card--tight ">
                        <div class="form-card__title alert-header">
                            <div class="alert-icon">
                                <i class="material-icons">warning</i>
                                <strong>Pedido Urgente!</strong>
                            </div>
                        </div>

                        <div class="form-card__content group">
                            <div class="form-group">
                                @Html.LabelFor(model => model.esUrgente, "Seleccione esta casilla si su pedido es urgente:", htmlAttributes: new { @class = "control-label col-md-10 tota", @data_toggle = "tooltip", @data_placement = "top", @data_original_title = "Seleccione esta casilla si su pedido es Urgente" })
                                <div class="col-md-2">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(model => model.esUrgente, htmlAttributes: new { @type = "checkbox", @name = "optionsCheckboxes", @data_toggle = "tooltip", @data_placement = "right", @data_original_title = "Seleccione esta casilla si su pedido es Urgente" })
                                            @Html.ValidationMessageFor(model => model.esUrgente, "", new { @class = "text-danger" })

                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-card form-card--purple form-card--tight ">
                        <div class="form-card__content group">
                            <div class="form-group">
                                <h3 class="col-md-7"><strong>Listado de Insumos</strong></h3>
                                <div class="row">
                                    <div class="col-md-12">
                                        <table class=" table table-hover table-condensed">
                                            <thead>
                                                <tr>
                                                    <th style="width:17%">Nombre</th>
                                                    <th style="width:14%">Tipo </th>
                                                    <th style="width:17%">Cantidad</th>
                                                    <th style="width:20%">Precio Unitario</th>
                                                    <th style="width:16%">Sub Total</th>
                                                    <th style="width:16%">Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody name="detallesPedido" id="detallesPedido">
                                                <tr class="empty well text-center">
                                                    <td colspan="6">Aun no se han agregado insumos</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>


                                @*<div class="form-group">*@
                                <div class="col-md-4 pull-right">
                                    <div class="form-card form-card--purple form-card--tight ">

                                        <div class="form-card__content group">
                                            <div class="form-group">
                                                @Html.Label("Total:", null, htmlAttributes: new { @class = "control-label col-md-4 tota" })
                                                <div class="col-md-8">
                                                    <strong>
                                                        @Html.TextBox("total", 0, htmlAttributes: new { @readonly = "readonly", @class = "form-control text-center tot" })
                                                    </strong>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="col-xs-12">
                                    <input type="submit" id="enviar" value="Enviar Pedido" class="btn pull-right btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                                }

<div>
    @Html.ActionLink("Volver al Inicio", "Index", "Home")
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
    //Este método borra los campos requeridos de insumo y cantidad para
    //que se pueda submitear el form sin que los pida, ya que no son necesarios.
    $(document).on('click', '#enviar', function () {
        document.getElementById("q").removeAttribute('required');
        document.getElementById("cantidad").removeAttribute('required');
            });
    //Este metodo Habilita el boton si insumo esta vacio para que pueda hacer las validaciones(Facu)
    

    var total = 0;
    var indice = $('#detallesPedido > tr').not('.empty').length;
    $('#enviar').hide();
        var data = '';

        $("#q").autocomplete({
        minLength: 0,
        source: function (request, response) {

            //Agregue esto para que no se pueda agregar un insumo mientras haya algo escrito que no sea un insumo,
            //cuando se selecciona un insumo, se habilita de nuevo. (Facu)
            if ($("#q").val() != '') {
                $('#btn_addInsumo').attr('disabled', true);
            }
            

            $.ajax({
                url: '@Url.Action("../Insumos/BuscarInsumos")',
                dataType: "json",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {
                    term: request.term,
                    id: $('#tipo').val()
                },
                success: function (data) {
                    response(data);
                }
            });
        },
        select: function (event, p) {
            data = p.item;
            $('#q').val(p.item.nombre);
            $('#idInsumo').val(p.item.id);
            //Aca habilito el boton de nuevo (Facu)
            $('#btn_addInsumo').attr('disabled', false);
            return false;
        }
    }).autocomplete("instance")._renderItem = function (ul, item) {
        return $("<li>")
            .append("<div><strong>" + item.nombre + "<\/strong><br><em>" + item.tipo + "<\/em><\/div>")
            .appendTo(ul);
            }
        $('#q').keyup(function () {
            if (!this.value) {
                $('#btn_addInsumo').attr('disabled', false);
            }
        });

    $(document).on('click', '#btn-eliminar-detallesPedido', function () {
        //Funcion que calcula el subtotal de la fila y lo resta al total al eliminar un elemento
        //Luego elimina la fila entera del detalle y verifica si la lista esta vacia para ocultar el boton enviar
        var $aRestar = 0;
        $aRestar = parseFloat($(this).parents('tr').get(0).children.item(2).innerHTML) * parseFloat($(this).parents('tr').get(0).children.item(3).innerHTML);
        //console.log($aRestar);
        total -= $aRestar;
        console.log($(this).parents('tr'));
        // $('#detallesPedido > tr').get($(this).parents('tr').get(0).;
        $(this).parents('tr').remove();
        indice--;
        //console.log($('#detallesPedido > tr').get(i));

        var $totalAMostrar = new Intl.NumberFormat('de-DE').format(total);

        $('#total').val("$" + $totalAMostrar);
        if ($('#detallesPedido > tr').not('.empty').length == 0) {
            $('#enviar').hide();
            $('#detallesPedido .empty').show();
        }
    });
    //Boton para agregar insumo a la lista
    $(document).on('click', '#btn_addInsumo', function (event) {

        var inpObj = document.getElementById("cantidad");
        if ($('#cantidad').val() < 999999) {
            if (data != '' && $('#cantidad').val() != "") {
                if ($('#detallesPedido .empty').is(':visible')) {
                    $('#detallesPedido .empty').hide();
                    $('#enviar').show();
                }
                //console.log(data);
                var $insumo_id = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][id]').val(data.id);
                var $insumoId = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumoId]').val(data.id);
                var $nombre = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][nombre]').val(data.nombre);
                var $tdInsumo = $('<td>').html(data.nombre).append($insumoId, $insumo_id, $nombre);

                var $tipo = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][tiposInsumo][nombre]').val(data.tipo);
                var $tdTipo = $('<td>').html(data.tipo).append($tipo);

                var $precioAMostrar = new Intl.NumberFormat('de-DE').format(data.precioUnitario);

                var $precioUnitario = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][insumo][precioUnitario]').val($precioAMostrar);
                var $tdPrecioUnitario = $('<td>').html($precioAMostrar).append($precioUnitario);

                var $cantidad = $('<input>').attr('type', 'hidden').attr('name', 'detallesPedido[' + indice + '][cantidad]').val($('#cantidad').val());
                var $tdCantidad = $('<td>').html($('#cantidad').val()).append($cantidad);

                var $subtotalCalculado = data.precioUnitario * $('#cantidad').val();
                var $subtotalAMostrar = new Intl.NumberFormat('de-DE').format($subtotalCalculado);

                var $subtotal = $('<input>').attr('type', 'hidden').attr('name', 'subtotal').val($subtotalAMostrar);
                var $tdSubtotal = $('<td>').html('$' + $subtotalAMostrar).append($cantidad);

                var $boton = $('<button>').attr('type', 'button').attr('id', 'btn-eliminar-detallesPedido').attr('rel', 'tooltip').attr('title', 'Eliminar Insumo').addClass('btn btn-danger btn-simple btn-xs ').append($('<i>').addClass('fa fa-times'));
                var $tdAccion = $('<td>').addClass('td-actions').append($boton);

                var $tr = $('<tr>').append($tdInsumo, $tdTipo, $tdCantidad, $tdPrecioUnitario, $tdSubtotal, $tdAccion);
                $('#detallesPedido').append($tr);
                indice++;
                total += $subtotalCalculado;


                //Previene que se submitee el Form con este botón. Solo valide los campos vacios.
                event.preventDefault();

                //Vacia los text box
                $('#q').val("");
                $('#cantidad').val("");
                $('#tipo').val("");

                //Agrega un atributo a la clase, para que se reinicien los inputs
                $('#insu').attr('class', 'form-group label-floating is-empty');
                $('#canti').attr('class', 'form-group label-floating is-empty');

                data = '';
               //El total se llenaba de decimales asi que hice esto para redondearlo a dos decimales nomas
                $('#total').val("$" + parseFloat(total).toFixed(2));
            }
        }
    });



});
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var idHospital = $('#hospitalId').val();
            $.ajax({
                url: '@Url.Action("getPresupuesto", "Hospitales")',
                type: 'GET',
                data: { idHospital: idHospital },
                cache: false,
                success: function(result) {
                    $('#presupuesto').html("$"+result);
                }
            });
        });

        $(function () {
        $('#hospitalId').change(function() {
            var idHospital = $(this).val();
            $.ajax({
                url: '@Url.Action("getPresupuesto", "Hospitales")',
                type: 'GET',
                data: { idHospital: idHospital },
                cache: false,
                success: function (result) {
                    $('#presupuesto').html("$"+result);
                }
            });
            });
        });
    </script>
}
