@model SIAH.Models.Pedidos.Pedido

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pedido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.periodo, "Período", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.periodo, new { @class = "form-control datepicker", placeholder = "Ingrrese una fecha", @id = "datepicker" })
                @Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaGeneracion, "Fecha Generación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("fechaGeneracion", DateTime.Today.ToShortDateString(), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.fechaGeneracion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaEntrega, "Fecha Entrega", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hospitalId, "Hospital", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("hospitalId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.hospitalId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.esUrgente, "Urgente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.esUrgente)
                    @Html.ValidationMessageFor(model => model.esUrgente, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estaAutorizado, "Autorizado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.estaAutorizado)
                    @Html.ValidationMessageFor(model => model.estaAutorizado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.Label("Tipo Insumo", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("tipoInsumo", null , htmlAttributes: new { @class = "form-control" })
            </div>
            @Html.LabelFor(model => model.detallesPedido, "Insumo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.detallesPedido, new { htmlAttributes = new { @class = "form-control", @id = "insumos" } })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        //$(function () { // will trigger when the document is ready
        //    $('.datepicker').datepicker(); //Initialise any date pickers
        //})
        $(document).ready(function () {
            $('#insumos').autocomplete({
                source: function (request, response) {
                    var autocompleteUrl = '/Insumos/BuscarInsumos' + '?searchText=' + request.term;
                    $.ajax({
                        url: autocompleteUrl,
                        type: 'GET',
                        cache: false,
                        dataType: 'json',
                        success: function (json) {
                            response($.map(json, function (data, id) {
                                return {
                                    label: data.Name,
                                    value: data.Name
                                };
                            }));
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            console.log('some error occured', textStatus, errorThrown);
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    lblMessage.innerText = "Your Selected Name :";
                    lblSelectedVal.innerText = ui.item.label;
                    $('#insumos').val(ui.item.label);
                    return false;
                }
            });
        });  

    </script>

}
