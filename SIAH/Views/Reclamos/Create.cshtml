@model SIAH.Models.Reclamos.Reclamo

@{
    /**/

    /**/
    int pedidoId = ViewBag.pedidoId;
    int hospitalId = ViewBag.hospitalId;
    String hospital = ViewBag.hospital;
    ViewBag.Title = "Generar Nuevo Reclamo";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

@using (Html.BeginForm("Create", "Reclamos", FormMethod.Post, new { id = "reclamoForm" }))
{
    <div class="banner-catalog">
        <div class="container">
            <div class="col-lg-12">
                <h1>Generar Reclamo de Pedido</h1>
                <div class="banner-catalog__content">  En este formulario puede generar un reclamo en caso de que su pedido haya llegado en un estado incorrecto.</div>
            </div>
        </div>
    </div>
    <br />

    <div class="container" style=" padding-bottom: 30px;">

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-12" id="det">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn">
                        <div class="form-card__title purple-header">
                            <div class="alert-icon">
                                <i class="material-icons">add</i>
                                <strong>Información general del reclamo</strong>
                            </div>
                        </div>
                        <div class="form-card__content group">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.fechaInicioReclamo, htmlAttributes: new { @class = "control-label col-md-7 " })
                                        <div class="col-md-5" style="padding-right: 0px;">
                                            @Html.TextBox("fechaInicioReclamo", DateTime.Now.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "form-control text-center", @readonly = "readonly", @value = DateTime.Now, @type = "hidden" })
                                            <text class="form-control text-center"><strong> @DateTime.Now.ToString("yyyy-MM-dd hh:mm") </strong></text>
                                            @Html.ValidationMessageFor(model => model.fechaInicioReclamo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.pedidoId, "Número de Pedido", htmlAttributes: new { @class = "control-label col-md-7 " })
                                        <div class="col-md-5">
                                            @Html.TextBox("pedidoId", pedidoId, htmlAttributes: new { @class = "form-control  text-center", @readonly = "readonly", @type = "hidden" })
                                            <text class="form-control text-center"><strong> @pedidoId </strong></text>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.hospitalId, "Hospital", htmlAttributes: new { @class = "control-label col-md-5" })
                                        <div class="col-md-7">
                                            <text class="form-control text-center"><strong>@hospital</strong></text>
                                            @Html.TextBox("hospital", hospital, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @type = "hidden" })
                                            @Html.TextBox("hospitalId", hospitalId, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @type = "hidden" })
                                            @Html.TextBox("tipoReclamoId", 1, htmlAttributes: new { @class = "form-control", @type = "hidden", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <br />
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn ">
                        <div class="form-card__title  violet-header">
                            <div class="alert-icon">
                                <i class="material-icons">storage</i>
                                <strong>Listado de Insumos del pedido</strong>
                            </div>
                        </div>
                    </div>

                    <div class="form-card__content group">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="alertArea  animated zoomIn" class="col-md-12">
                                        <div class="alert alert-info pq-alert  animated zoomIn col-md-12">
                                            <i class="fa fa-arrow-right"></i>
                                            <span>Marque los insumos a reclamar, luego seleccione la cantidad, tipo de reclamo y agregue una observación</span>
                                        </div>

                                    </div>
                                    <table id="maintable" class=" table table-hover table-condensed">
                                        <thead>
                                            <tr class="text-center list-group-item-info">
                                                <th class="text-center">Nombre</th>
                                                <th class="text-center">Tipo </th>
                                                <th class="text-center">Cantidad</th>
                                                <th class="text-center">Precio Unitario</th>
                                                <th class="text-center">
                                                    Reclamar
                                                    <input id="syncAll" name="syncAll" type="checkbox" class="sync-all" onchange="allChecked();" />
                                                </th>
                                                <th class="text-center">Observación</th>
                                                <th class="text-center">Tipo de Reclamo</th>
                                            </tr>
                                        </thead>
                                        <tbody name="detallesReclamo" id="detallesReclamo">
                                            @foreach (var detalle in (IEnumerable<SIAH.Controllers.ReclamosController.DetallesReclamoDTO>)ViewBag.detallesPedido)
                                            {
                                                <tr>
                                                    <td class="text-center">@detalle.nombre <input class="insId" readonly type="hidden" value="@detalle.insumoId"></td>
                                                    <td class="text-center">@detalle.tipo</td>
                                                    <td class="text-center"><input type="number" class="cant form-control text-center" max="@detalle.cantidad" min="0" readonly value="@detalle.cantidad"></td>
                                                    <td class="text-center">@detalle.precioUnitario</td>
                                                    <td class="text-center">
                                                        <input id="sync" name="sync" type="checkbox" class="sync-box" onchange="checkBoxClicked();" />
                                                    </td>
                                                    <td class="text-center">
                                                        @Html.TextAreaFor(model => model.observacionFamacia, 5, 30, htmlAttributes: new { @name = "dummyObservacion", @class = "form-control obs", @maxlength = "500", @placeholder = "Detalle sus inconformidades respecto al insumo recibido para que sean evaluadas por la Oficina de Autorizaciones Hospitalarias", @disabled = "disabled" })
                                                    </td>
                                                    <td class="text-center">
                                                        @Html.DropDownListFor(model => model.tipoReclamoId, null,
                                                        "-- Seleccione un tipo --",
                                                        htmlAttributes: new { @class = "form-control type", @style = "min-width: 200px;", @disabled = "disabled" })
                                                    </td>

                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                        <div class="form-group col-md-12" style="padding-top: 20px;">
                            <div class="pull-right col-md-2">
                                <input id="btn_reclamar" type="button" value="Generar Reclamo" class="btn pull-right btn-primary" style="visibility:collapse;" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}

<div class="container">
    <input id="btn_cancelar" type="button" value="Cancelar" class="btn pull-left btn-primary" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(() => {
            table = $("#maintable").DataTable({
                "oLanguage": { "sEmptyTable": "No hay insumos cargados para este pedido" },
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                }
            });
        });
        $(document).on('click', '#btn_reclamar', function () {
            if (document.getElementById('reclamoForm').reportValidity()) {
                Swal.fire({
                    title: 'Se generará su reclamo',
                    text: "¿Está seguro que desea continuar?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: "#28a745",
                    confirmButtonText: 'Aceptar',
                    cancelButtonColor: "#dc3545",
                    cancelButtonText: 'Cancelar',
                    reverseButtons: true
                }).then((result) => {
                    if (result.value) {
                        var count = 0;
                        $('#maintable > tbody  > tr').each(function () {
                            var shouldSync = $(this).find('.sync-box')[0];
                            if (shouldSync.checked) {
                                $(this).find('.obs')[0].setAttribute("name", `detallesReclamo[${count}][observacion]`);
                                $(this).find('.insId')[0].setAttribute("name", `detallesReclamo[${count}][insumoId]`);
                                $(this).find('.cant')[0].setAttribute("name", `detallesReclamo[${count}][cantidad]`);
                                $(this).find('.type')[0].setAttribute("name", `detallesReclamo[${count}][tipoReclamoId]`);
                                count++;
                            }
                        });
                        $('#reclamoForm').submit();
                    }
                })
            }

        });

        $(document).on('click', '#btn_cancelar', function () {
            Swal.fire({
                title: 'Cancelar!',
                text: "¿Está seguro que desea continuar?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                confirmButtonText: 'Aceptar',
                cancelButtonColor: "#dc3545",
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    event.preventDefault();
                    var idPedido = $('#pedidoId').val();
                    var urlRecibido = '/Pedidos/Details/' + idPedido;
                    location.href = urlRecibido;
                }
            })
        });
        $(document).ready(function () {
        });

        function checkBoxClicked() {
            var counter = 0;
            $('#maintable > tbody  > tr').each(function () {
                var shouldSync = $(this).find('.sync-box')[0];
                if (shouldSync.checked) {
                    counter++;
                    $(this).find('.obs')[0].removeAttribute("disabled");
                    $(this).find('.obs')[0].setAttribute("required", "");
                    $(this).find('.type')[0].removeAttribute("disabled");
                    $(this).find('.cant')[0].removeAttribute("readonly");
                } else {
                    $(this).find('.obs')[0].setAttribute("disabled", "disabled");
                    $(this).find('.obs')[0].removeAttribute("required");
                    $(this).find('.type')[0].setAttribute("disabled", "disabled");
                    $(this).find('.cant')[0].setAttribute("readonly", "readonly");
                }

            });

            if (counter == 0) {
                document.getElementById('btn_reclamar').setAttribute('style', 'visibility: collapse');
            } else {
                document.getElementById('btn_reclamar').setAttribute('style', 'visibility: visible');
            }
        }

        function allChecked() {
            if ($('#syncAll').prop('checked')) {
                $('#maintable > tbody  > tr').each(function () {
                    $(this).find('.sync-box')[0].checked = true;

                });
            } else {
                $('#maintable > tbody  > tr').each(function () {
                    $(this).find('.sync-box')[0].checked = false;
                });
            }
            checkBoxClicked();
        }
    </script>
}
