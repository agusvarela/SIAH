@model SIAH.Models.Reclamos.Reclamo

@{
    /**/

    /**/
    int pedidoId = ViewBag.pedidoId;
    int hospitalId = ViewBag.hospitalId;
    String hospital = ViewBag.hospital;
    ViewBag.Title = "Generar Nuevo Reclamo";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

@using (Html.BeginForm("Create", "Reclamos", FormMethod.Post, new { id = "reclamoForm" }))
{
    <div class="banner-catalog">
        <div class="container">
            <div class="col-lg-12">
                <h1>Generar Reclamo de Pedido</h1>
                <div class="banner-catalog__content">  En este formulario puede generar un reclamo en caso de que su pedido haya llegado en un estado incorrecto.</div>
            </div>
        </div>
    </div>
    <br />

    <div class="container" style=" padding-bottom: 30px;">

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn">
                        <div class="form-card__title info-header">
                            <div class="alert-icon">
                                <i class="material-icons">info_outline</i>
                                <strong>Información general del Reclamo</strong>
                            </div>
                        </div>

                        <div class="form-card__content group">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.fechaInicioReclamo, htmlAttributes: new { @class = "control-label col-md-7 " })
                                    <div class="col-md-5">
                                        @Html.TextBox("fechaInicioReclamo", DateTime.Today.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "form-control", @readonly = "readonly", @value = DateTime.Today, @type = "hidden" })
                                        <text class="form-control"><strong> @DateTime.Today.ToString("yyyy-MM-dd") </strong></text>
                                        @Html.ValidationMessageFor(model => model.fechaInicioReclamo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.pedidoId, "Número de Pedido", htmlAttributes: new { @class = "control-label col-md-7 " })
                                    <div class="col-md-5">
                                        @Html.TextBox("pedidoId", pedidoId, htmlAttributes: new { @class = "form-control pull-left", @readonly = "readonly", @type = "hidden" })
                                        <text class="form-control"><strong> @pedidoId </strong></text>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>


                <div class="col-md-8" id="det">
                    <div class="form-card form-card--purple form-card--tight  animated zoomIn">
                        <div class="form-card__title purple-header">
                            <div class="alert-icon">
                                <i class="material-icons">add</i>
                                <strong>Complete la informacion sobre su Reclamo</strong>
                            </div>
                        </div>
                        <div class="form-card__content group">
                            <div class="col-sm-8">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tipoReclamoId, "Tipo Reclamo", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("tipoReclamoId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.tipoReclamoId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.hospitalId, "Hospital", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.TextBox("hospital", hospital, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @type = "hidden" })
                                        @Html.TextBox("hospitalId", hospitalId, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @type = "hidden" })
                                        <text class="form-control">@hospital</text>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.observacionFamacia, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => model.observacionFamacia, 5, 150, htmlAttributes: new { @class = "form-control", @maxlength = "500", @onkeyup = "countChar(this)", @placeholder = "Detalle sus inconformidades respecto al pedido recibido para que sean evaluadas por la Oficina de Autorizaciones Hospitalarias", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.observacionFamacia, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="form-group col-md-12">
                                <div class="pull-right col-md-2">
                                    <input id="btn_reclamar" type="button" value="Generar Reclamo" class="btn pull-right btn-primary" />
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>


    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}

<div class="container">
    <input id="btn_cancelar" type="button" value="Cancelar" class="btn pull-left btn-primary" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
            $(document).on('click', '#btn_reclamar', function () {
                document.getElementById('observacionFamacia').reportValidity();
                if (document.getElementById('observacionFamacia').checkValidity()) {
                    Swal.fire({
                        title: 'Se generará su reclamo',
                        text: "¿Está seguro que desea continuar?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: "#28a745",
                        confirmButtonText: 'Aceptar',
                        cancelButtonColor: "#dc3545",
                        cancelButtonText: 'Cancelar',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.value) {
                            $('#reclamoForm').submit();
                        }
                    })
                }
            });

        $(document).on('click', '#btn_cancelar', function () {
            Swal.fire({
                title: 'Cancelar!',
                text: "¿Está seguro que desea continuar?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                confirmButtonText: 'Aceptar',
                cancelButtonColor: "#dc3545",
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    event.preventDefault();
                    var idPedido = $('#pedidoId').val();
                    var urlRecibido = '/Pedidos/Details/' + idPedido;
                    location.href = urlRecibido;
                }
            })
        });
        $(document).ready(function () {
            var len = $('#observacionFamacia').val().length;
            var countToShow = (500 - len).toString();
            countToShow += '/500';
            $('#charNum').text(countToShow);
        });
        function countChar(val) {
            var len = val.value.length;
            let countToShow = '';
            if (len >= 500) {
                val.value = val.value.substring(0, 500);
            } else {
                countToShow = (500 - len).toString();
                countToShow += '/500';
                $('#charNum').text(countToShow);
            }
        };
    </script>
}
